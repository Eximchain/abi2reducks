
import { CallData } from 'ethereum-types';
interface TxState{
    {{#each abi}}
    {{camelCase name}}State:I{{pascalCase name}}
    {{/each}}
    
}


{{#each abi}}

//{{name}} Interface
export interface I{{pascalCase name}} {
    callData:CallData
    params: {{pascalCase name}}Params
}
export interface {{pascalCase name}}Params {
{{#each inputs}}
{{#if name}}
    {{camelCase name}}:{{type}}
{{else}}
    param{{@index}}:{{type}}
{{/if}}
{{/each}}
}

{{/each}}

type address= string ;
type bool= boolean ;

type uint = number;
type uint8 = number;
type uint16 = number;
type uint24 = number;
type uint32 = number;
type uint40 = number;
type uint48 = number;
type uint56 = number;
type uint64 = number;
type uint72 = number;
type uint80 = number;
type uint88 = number;
type uint96 = number;
type uint104 = number;
type uint112 = number;
type uint120 = number;
type uint128 = number;
type uint136 = number;
type uint144 = number;
type uint152 = number;
type uint160 = number;
type uint168 = number;
type uint176 = number;
type uint184 = number;
type uint192 = number;
type uint200 = number;
type uint208 = number;
type uint216 = number;
type uint224 = number;
type uint232 = number;
type uint240 = number;
type uint248 = number;
type uint256 = number;

type int = number;
type int8 = number;
type int16 = number;
type int24 = number;
type int32 = number;
type int40 = number;
type int48 = number;
type int56 = number;
type int64 = number;
type int72 = number;
type int80 = number;
type int88 = number;
type int96 = number;
type int104 = number;
type int112 = number;
type int120 = number;
type int128 = number;
type int136 = number;
type int144 = number;
type int152 = number;
type int160 = number;
type int168 = number;
type int176 = number;
type int184 = number;
type int192 = number;
type int200 = number;
type int208 = number;
type int216 = number;
type int224 = number;
type int232 = number;
type int240 = number;
type int248 = number;
type int256 = number;

type bytes1= string;
type bytes2= string;
type bytes3= string;
type bytes4= string;
type bytes5= string;
type bytes6= string;
type bytes7= string;
type bytes8= string;
type bytes9= string;
type bytes10= string;
type bytes11= string;
type bytes12= string;
type bytes13= string;
type bytes14= string;
type bytes15= string;
type bytes16= string;
type bytes17= string;
type bytes18= string;
type bytes19= string;
type bytes20= string;
type bytes21= string;
type bytes22= string;
type bytes23= string;
type bytes24= string;
type bytes25= string;
type bytes26= string;
type bytes27= string;
type bytes28= string;
type bytes29= string;
type bytes30= string;
type bytes31= string;
type bytes32= string;

export default TxState